/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define NUMPAD 3
#define MOUSE 4
#define WASD 5

/ {
        behaviors {
                lh_ctrl: left_hand_control {
                        compatible = "zmk,behavior-hold-tap";
                        label = "POSITIONAL_HOLD_TAP_LEFT_CONTROL";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <250>;
                        quick-tap-ms = <300>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <1 2 3 14 15 19 25 26>;
                };
                rh_ctrl: right_hand_control {
                        compatible = "zmk,behavior-hold-tap";
                        label = "POSITIONAL_HOLD_TAP_RIGHT_CONTROL";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <250>;
                        quick-tap-ms = <300>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <4 16 25 26 27 29>;
                };
                lh_alt: left_hand_alt {
                        compatible = "zmk,behavior-hold-tap";
                        label = "POSITIONAL_HOLD_TAP_LEFT_ALT";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <250>;
                        quick-tap-ms = <300>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <12 28>;
                };
                rh_alt: right_hand_alt {
                        compatible = "zmk,behavior-hold-tap";
                        label = "POSITIONAL_HOLD_TAP_RIGHT_ALT";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <250>;
                        quick-tap-ms = <300>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <12 28>;
                };
                lh_shft: left_hand_shift {
                        compatible = "zmk,behavior-hold-tap";
                        label = "POSITIONAL_HOLD_TAP_LEFT_SHIFT";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <250>;
                        quick-tap-ms = <300>;
                        bindings = <&kp>, <&kp>;
                };
                rh_shft: right_hand_shift {
                        compatible = "zmk,behavior-hold-tap";
                        label = "POSITIONAL_HOLD_TAP_RIGHT_SHIFT";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <250>;
                        quick-tap-ms = <300>;
                        bindings = <&kp>, <&kp>;
                };
                lh_gui: left_hand_gui {
                        compatible = "zmk,behavior-hold-tap";
                        label = "POSITIONAL_HOLD_TAP_LEFT_GUI";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <250>;
                        quick-tap-ms = <300>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <7 12>;
                };
                rh_gui: right_hand_gui {
                        compatible = "zmk,behavior-hold-tap";
                        label = "POSITIONAL_HOLD_TAP_RIGHT_GUI";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <250>;
                        quick-tap-ms = <300>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <7 12 14>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// | ESC      |  Q          |  W            |  F             |  P             |  B     |  //  |  J     |  L             |  U              |  Y           |  ;           |  -   |
// | TAB      |  A-gui      |  R-alt        |  S-shift       |  T-ctrl        |  G     |  //  |  M     |  N-ctrl        |  E-shift        |  I-alt       |  O-gui       |  '   |
// | NUMP     |  Z          |  X            |  C             |  D             |  V     |  //  |  K     |  H             |  ,              |  .           |  /           |  \   |
//                                          |  BACKSPACE     |  SPC           |  LOWER |  //  |  ENT   |  RAISE         |  ALT            |
                        bindings = <
   &kp ESC    &kp Q          &kp W          &kp F            &kp P            &kp B           &kp J     &kp L            &kp U            &kp Y          &kp SEMI       &kp MINUS
   &kp TAB    &lh_gui LGUI A &lh_alt LALT R &lh_shft LSHFT S &lh_ctrl LCTRL T &kp G           &kp M     &rh_ctrl RCTRL N &rh_shft RSHFT E &rh_alt RALT I &rh_gui RGUI O &kp SQT
   &mo NUMPAD &kp Z          &kp X          &kp C            &kp D            &kp V           &kp K     &kp H            &kp COMMA        &kp DOT        &kp FSLH       &kp BSLH
                                            &kp BKSP         &lt LOWER SPACE  &lt RAISE INS   &mo LOWER &lt RAISE RET    &mo LOWER
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------
// |       |  1   |  2   |  3    |  4    |  5  |                                       |  6       |  7     |  8    |  9      |  0   |      |
// |       | LGUI | LALT | LSHFT | LCTRL |     |                                       | LFT      | DWN    |  UP   | RGT     |      |      |
// | BTCLR | BT1  | BT2  | BT3   | BT4   | BT5 |                                       | PG UP    | HOME   | END   | PG DN   |      |      |
//                       |       |       |     |                                       |          |        |       |
                        bindings = <
   &trans     &kp N1       &kp N2       &kp N3       &kp N4       &kp N5        &kp N6     &kp N7   &kp N8  &kp N9    &kp N0 &trans
   &trans     &kp LGUI     &kp LALT     &kp LSHFT    &kp LCTRL    &trans        &kp LEFT   &kp DOWN &kp UP  &kp RIGHT &trans &trans
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &kp PG_UP  &kp HOME &kp END &kp PG_DN &trans &trans
                          	            &trans       &trans       &trans        &kp trans  &trans   &trans
                        >;
                };

                raise_layer {
// --------------------------------------------------------------------------------------------
// |    |  !   |  @   |  #   |  $  |  %  |               |  ^  |  &  |  *  |  (  |  )  |      |
// | F1 |  F2  |  F3  |  F4  | F5  | F6  |               |  -  |  =  |  [  |  ]  |  \  |  `   |
// | F7 |  F8  |  F9  |  F10 | F11 | F12 |               |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    |      |     |     |               |     |     |     |
                        bindings = <
   &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
   &kp F1  &kp F2   &kp F3 &kp F4   &kp F5   &kp F6      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp F7  &kp F8   &kp F9 &kp F10  &kp F11  &kp F12     &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                           &trans   &trans   &trans      &trans    &trans    &trans
                        >;
                };

                numpad_layer {
// -------------------------------------------------------------------------------------------
// |      |     |     |     |     |     |               |     |  7  |  8  |  9  |  +  |  -   |
// |      |     |     |     |     |     |               |     |  4  |  5  |  6  |     |  *   |
// |      |     |     |     |     |     |               |  .  |  1  |  2  |  3  | RET |  /   |
//                    |     |     |     |               |     |  0  |     |
                        bindings = <
   &trans  &trans   &trans &trans   &trans   &trans   &trans    &kp N7  &kp N8 &kp N9 &kp PLUS &kp MINUS
   &trans  &trans   &trans &trans   &trans   &trans   &trans    &kp N4  &kp N5 &kp N6 &trans   &kp KP_MULTIPLY
   &trans  &trans   &trans &trans   &trans   &trans   &kp DOT   &kp N1  &kp N2 &kp N3 &kp RET  &kp FSLH
                           &trans   &trans   &trans   &trans    &kp N0  &trans
                        >;
                };

                 wasd_layer {
// -------------------------------------------------------------------------------------------
// |      | TAB |  Q  |  W  |  E  |  R  |               |     |     |     |     |     |      |
// |      | LSHT|  A  |  S  |  D  |  F  |               |     |     |     |     |     |      |
// |      | LCTL|  Z  |  X  |  C  |  V  |               |     |     |     |     |     |      |
//                    |     |     |     |               |     |     |     |
                        bindings = <
   &trans  &kp TAB    &kp Q &kp W   &kp E   &kp R   &trans    &trans  &trans &trans &trans &trans
   &trans  &kp LSHIFT &kp A &kp S   &kp D   &kp F   &trans    &trans  &trans &trans &trans &trans
   &trans  &kp LCTRL  &kp Z &kp X   &kp C   &kp V   &trans    &trans  &trans &trans &trans &trans
                           &trans   &trans  &trans  &trans    &trans  &trans
                        >;
                };
        };
};
